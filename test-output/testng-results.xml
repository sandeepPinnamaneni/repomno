<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-01T16:30:38 IST" name="Suite" finished-at="2022-09-01T16:30:49 IST" duration-ms="11328">
    <groups>
    </groups>
    <test started-at="2022-09-01T16:30:38 IST" name="TwoTest" finished-at="2022-09-01T16:30:46 IST" duration-ms="8528">
      <class name="Tests.TwoTest">
        <test-method signature="testTwo()[pri:0, instance:Tests.TwoTest@496bc455]" started-at="2022-09-01T16:30:38 IST" name="testTwo" finished-at="2022-09-01T16:30:46 IST" duration-ms="8446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
      </class> <!-- Tests.TwoTest -->
    </test> <!-- TwoTest -->
    <test started-at="2022-09-01T16:30:38 IST" name="ThreeTest" finished-at="2022-09-01T16:30:48 IST" duration-ms="10369">
      <class name="Tests.ThreeTest">
        <test-method signature="testThree()[pri:0, instance:Tests.ThreeTest@6892b3b6]" started-at="2022-09-01T16:30:38 IST" name="testThree" finished-at="2022-09-01T16:30:48 IST" duration-ms="10294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
      </class> <!-- Tests.ThreeTest -->
    </test> <!-- ThreeTest -->
    <test started-at="2022-09-01T16:30:38 IST" name="FourTest" finished-at="2022-09-01T16:30:49 IST" duration-ms="10920">
      <class name="Tests.FourTest">
        <test-method signature="testFour()[pri:0, instance:Tests.FourTest@710636b0]" started-at="2022-09-01T16:30:38 IST" name="testFour" finished-at="2022-09-01T16:30:48 IST" duration-ms="10401" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at Tests.FourTest.testFour(FourTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFour -->
        <test-method is-config="true" signature="closingBrowser()[pri:0, instance:Tests.FourTest@710636b0]" started-at="2022-09-01T16:30:49 IST" name="closingBrowser" finished-at="2022-09-01T16:30:49 IST" duration-ms="143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closingBrowser -->
      </class> <!-- Tests.FourTest -->
    </test> <!-- FourTest -->
    <test started-at="2022-09-01T16:30:38 IST" name="LoginTest" finished-at="2022-09-01T16:30:49 IST" duration-ms="11328">
      <class name="Tests.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:Tests.LoginTest@536f2a7e]" started-at="2022-09-01T16:30:38 IST" name="openApplication" finished-at="2022-09-01T16:30:45 IST" duration-ms="7314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="loginTest(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:Tests.LoginTest@536f2a7e]" started-at="2022-09-01T16:30:45 IST" name="loginTest" data-provider="getLoginData" finished-at="2022-09-01T16:30:49 IST" duration-ms="3839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sandeep.pinnama@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sandep@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Sucessfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="closur()[pri:0, instance:Tests.LoginTest@536f2a7e]" started-at="2022-09-01T16:30:49 IST" name="closur" finished-at="2022-09-01T16:30:49 IST" duration-ms="100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closur -->
      </class> <!-- Tests.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Suite -->
</testng-results>
